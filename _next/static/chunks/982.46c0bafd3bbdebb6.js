(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[982],{6982:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>i});var r=n(5155),o=n(2115);function l(e){return e}function a(e,t){var n=t.id,r=t.bbox,o=null==t.properties?{}:t.properties,a=function(e,t){var n=function(e){if(null==e)return l;var t,n,r=e.scale[0],o=e.scale[1],a=e.translate[0],i=e.translate[1];return function(e,l){l||(t=n=0);var c=2,u=e.length,s=Array(u);for(s[0]=(t+=e[0])*r+a,s[1]=(n+=e[1])*o+i;c<u;)s[c]=e[c],++c;return s}}(e.transform),r=e.arcs;function o(e){return n(e)}function a(e){for(var t=[],o=0,l=e.length;o<l;++o)!function(e,t){t.length&&t.pop();for(var o=r[e<0?~e:e],l=0,a=o.length;l<a;++l)t.push(n(o[l],l));e<0&&function(e,t){for(var n,r=e.length,o=r-t;o<--r;)n=e[o],e[o++]=e[r],e[r]=n}(t,a)}(e[o],t);return t.length<2&&t.push(t[0]),t}function i(e){for(var t=a(e);t.length<4;)t.push(t[0]);return t}function c(e){return e.map(i)}return function e(t){var n,r=t.type;switch(r){case"GeometryCollection":return{type:r,geometries:t.geometries.map(e)};case"Point":n=o(t.coordinates);break;case"MultiPoint":n=t.coordinates.map(o);break;case"LineString":n=a(t.arcs);break;case"MultiLineString":n=t.arcs.map(a);break;case"Polygon":n=c(t.arcs);break;case"MultiPolygon":n=t.arcs.map(c);break;default:return null}return{type:r,coordinates:n}}(t)}(e,t);return null==n&&null==r?{type:"Feature",properties:o,geometry:a}:null==r?{type:"Feature",id:n,properties:o,geometry:a}:{type:"Feature",id:n,bbox:r,properties:o,geometry:a}}n(8413);let i=e=>{let{topoJsonPath:t,citiesInfographicData:l,logoPath:i}=e,c=(0,o.useRef)(null),u=(0,o.useRef)(null),[s,f]=(0,o.useState)(!1),p=(0,o.useRef)({}),[m,d]=(0,o.useState)(null),[g,h]=(0,o.useState)(null);return(0,o.useEffect)(()=>{window.innerWidth<768?(console.log("Setting view for MOBILE: Focus Jakarta with shared zoom"),h({center:[-6.1751,106.8272],zoom:6.75})):(console.log("Setting view for DESKTOP: Focus Jawa-Bali with shared zoom"),h({center:[-7.7,111.5],zoom:6.75}))},[]),(0,o.useEffect)(()=>{n.e(761).then(n.t.bind(n,5752,23)).then(e=>{d(e)}).catch(e=>{console.error("Failed to load Leaflet",e)})},[]),(0,o.useEffect)(()=>{if(!m||!c.current||u.current||!g)return;console.log("MapComponent: Initializing map with dynamic view:",g);let e=m.map(c.current,{dragging:!0,scrollWheelZoom:!0,touchZoom:!0,doubleClickZoom:!0,zoomControl:!0,attributionControl:!1,maxBounds:[[-11,105],[-5,116.5]],maxBoundsViscosity:1,minZoom:window.innerWidth<768?5.75:6.5,maxZoom:7.25,zoomSnap:.25}).setView(g.center,g.zoom);u.current=e,f(!0),fetch(t).then(e=>e.json()).then(t=>{let n=Object.keys(t.objects)[0];if(t.objects[n]){let r=function(e,t){return"string"==typeof t&&(t=e.objects[t]),"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return a(e,t)})}:a(e,t)}(t,t.objects[n]);m.geoJSON(r,{style:()=>({fillColor:"#A73862",weight:.7,opacity:1,color:"#862d4f",fillOpacity:.95})}).addTo(e)}}).catch(e=>console.error("Error loading TopoJSON for base map:",e));let n=u.current;return()=>{console.log("MapComponent: Cleaning up map."),n&&(Object.values(p.current).forEach(e=>{var t,n,r;null==(t=e.pin)||t.remove(),null==(n=e.label)||n.remove(),null==(r=e.line)||r.remove()}),p.current={},n.remove()),u.current=null,f(!1)}},[m,t,g]),(0,o.useEffect)(()=>{if(!m||!s||!u.current||!l)return;let e=u.current;console.log("MapComponent: Drawing city infographic elements."),Object.values(p.current).forEach(e=>{var t,n,r;null==(t=e.pin)||t.remove(),null==(n=e.label)||n.remove(),null==(r=e.line)||r.remove()}),p.current={},l.forEach(t=>{let n=m.latLng(t.lat,t.lng),r=m.latLng(t.lat+t.labelOffset[0],t.lng+t.labelOffset[1]),o='<div style="background-color: '.concat(t.pinColor||"magenta",'; width: 12px; height: 12px; border-radius: 50%; border: 2px solid white; box-shadow: 0 0 4px rgba(0,0,0,0.5);"></div>'),l=m.divIcon({html:o,className:"leaflet-custom-pin",iconSize:[12,12],iconAnchor:[6,6]}),a=m.marker(n,{icon:l,zIndexOffset:1e3}).addTo(e),c='\n        <div class="custom-city-label" style="background-color: rgba(40,10,30,0.85); border: 1.5px solid '.concat(t.lineColor||"magenta",';">\n          <img src="').concat(i,'" alt="Logo" style="width:').concat(32,"px; height:").concat(32,'px; margin-bottom: 5px; border-radius: 50%; object-fit: contain;" />\n          <span style="color: white; font-size: 11px; font-weight: bold; text-shadow: 1px 1px 2px black;">').concat(t.name,"</span>\n        </div>\n      "),u=m.divIcon({html:c,className:"leaflet-custom-label-icon",iconSize:void 0,iconAnchor:[40,25]}),s=m.marker(r,{icon:u,zIndexOffset:900}).addTo(e),f=m.polyline([n,r],{color:t.lineColor||"magenta",weight:2,opacity:.85}).addTo(e);p.current[t.id]={pin:a,label:s,line:f}});let t=setTimeout(()=>{u.current&&u.current.invalidateSize()},50);return()=>clearTimeout(t)},[m,s,l,i]),(0,o.useEffect)(()=>{if(!m||!s||!u.current)return;let e=u.current,t=()=>{console.log("Window resized, invalidating map size."),e.invalidateSize()};window.addEventListener("resize",t);let n=setTimeout(()=>{u.current&&u.current.invalidateSize()},150);return()=>{window.removeEventListener("resize",t),clearTimeout(n)}},[m,s]),(0,r.jsx)("div",{ref:c,className:"w-full h-full bg-gray-700"})}},8413:()=>{}}]);